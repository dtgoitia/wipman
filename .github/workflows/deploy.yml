name: deploy

on:
  push:
    branches:
      - master

jobs:
  deploy-webapp:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: webapp
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.6.1"

      - name: Cache npm modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit:ci

      - name: Create a production build
        run: npm run build

      - name: Remove source files
        run: rm -rf dist/static/js/*.map

      - name: Deploy to GitHub pages
        run: |
          git remote set-url origin https://git:${PUBLIC_GITHUB_ACCOUNT_TOKEN}@github.com/${PUBLIC_GITHUB_REPOSITORY}.git
          npx gh-pages --dist=dist --branch=gh-pages -u "github-actions-bot <support+actions@github.com>"
        env:
          PUBLIC_GITHUB_ACCOUNT_TOKEN: ${{ secrets.PUBLIC_GITHUB_ACCOUNT_TOKEN }}
          PUBLIC_GITHUB_REPOSITORY: ${{ secrets.PUBLIC_GITHUB_REPOSITORY }}

  build-and-publish-api-container-image:
    name: Build API container image and publish it to GitLab
    runs-on: ubuntu-latest
    steps:
      - name: Checkout last commit
        uses: actions/checkout@v4

      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        uses: docker/metadata-action@v4
        id: meta  # used later to refer to the outputs of this step
        with:
          images: registry.gitlab.com/dtgoitia/wipman

      - name: Login to GitLab Container Registry
        uses: docker/login-action@v2
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.GITLAB_CONTAINER_REGISTRY_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
